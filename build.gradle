plugins {
    id 'idea'
    id 'java'
    id 'maven-publish'
    id 'org.checkerframework' version '0.6.+'
    id 'org.cadixdev.licenser' version '0.6.1'
}

ext {
    ENV = System.getenv()
    MC_VERSION = '1.17.x'
    VERSION = '0.1.0' // Not official released yet. Keep 0.1.0 until official released
    BUILD = "${ENV.GITHUB_RUN_NUMBER ?: 'INTERNAL_BUILD'}"
}

group = 'org.pistonmc.api'
base.archivesName = 'plugin-api'
version = "$MC_VERSION-$VERSION${ENV.GITHUB_EVENT_NAME != 'workflow_dispatch' ? '-SNAPSHOT' : ".$BUILD"}"

repositories {
    mavenCentral()
    maven {
        name 'forge-maven'
        url 'https://maven.minecraftforge.net/'
    }
}

configurations.compileOnly.canBeResolved = true

java {
    toolchain.languageVersion = JavaLanguageVersion.of(16)
    withSourcesJar()
    withJavadocJar()
}

license {
    header = project.file('HEADER')
    properties {
        year = '2021'
    }
    include('**/*.java')
}

checkerFramework {
    checkers = [
            'org.checkerframework.checker.nullness.NullnessChecker',
            'org.checkerframework.common.value.ValueChecker',
    ]
}

dependencies {
    compileOnly libs.bundles.compileonlys

    implementation(libs.bundles.libs) {
        exclude module: 'annotations'
        exclude group: 'org.checkerframework'
    }

    implementation(libs.bundles.nontransitives) {
        transitive = false
    }

    annotationProcessor libs.bundles.annotations
}

tasks.withType(JavaCompile) {
    options.encoding 'UTF-8'
    options.compilerArgs.add '-Xplugin:Manifold'
}

tasks.withType(Javadoc) {
    options.encoding 'UTF-8'
    options.locale 'en_US' // This doesn't work, don't know why
    classpath += configurations.annotationProcessor
    configurations.compileOnly.resolve().each {
        if(it.name.startsWith('manifold-javadoc-agent')) {
            options.jFlags("-javaagent:${it.absolutePath}")
        }
    }
}

tasks.withType(Jar) {
    manifest.attributes([
            'Specification-Title': project.name,
            'Specification-Version': project.ext.MC_VERSION,
            'Specification-Vendor': 'PistonMC',
            'Implementation-Title': project.name,
            'Implementation-Version': project.ext.VERSION,
            'Implementation-Vendor': 'PistonMC',
    ])
}

publishing {
    repositories {
        maven {
            name "${project.name}-GitHub-Registry"
            url "https://maven.pkg.github.com/PistonMinecraft/${project.name}"
            credentials {
                username = ENV.GPR_USERNAME ?: ENV.GITHUB_ACTOR
                password = ENV.GPR_TOKEN
            }
        }
        maven {
            name 'localrepo'
            url layout.buildDirectory.dir('localrepo')
        }
    }

    publications {
        maven(MavenPublication) {
            artifactId = base.archivesName.get()
            from components.java
        }
    }
}